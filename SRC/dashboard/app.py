# Bibliotecas utilizadas
import streamlit as st
import pandas as pd
import sqlite3

# Conex√£o com o banco de dados
conn = sqlite3.connect('./data/data.db')

# Consulta ao banco de dados para obter os dados tabela 'ML'
df = pd.read_sql_query("SELECT * FROM ML", conn)

# Fechar a conex√£o com o banco de dados
conn.close()

# T√≠tulo da aplica√ß√£o
st.title("Pesquisa de Mercado - :blue[_Smartphones no Mercado Livre._üì±]")

# Layout com colunas para KPIs
st.subheader("KPIs Principais do Sistema")
col1, col2, col3 = st.columns(3)

# KPI 1 - Quantidade de smartphones
total_itens = df.shape[0]
col1.metric(label="N√∫mero Total de Smartphones", value=total_itens)

# KPI 2: N√∫mero de lojas √∫nicas
unique_lojas = df['loja'].nunique()
col2.metric(label="N√∫mero de Lojas √önicas", value=unique_lojas)

# KPI 3: Pre√ßo m√©dio novo (em reais)
average_new_price = df['new_price'].mean()
col3.metric(label="Pre√ßo M√©dio Novo (R$)", value=f"{average_new_price:.2f}")

# Quais as lojas s√£o mais encontradas at√© a 10¬™ p√°gina
st.subheader('Lojas Mais Encontradas at√© a 20¬™ P√°gina')
col1, col2 = st.columns([6, 4])
top_10_pages_lojas = (df['loja'].value_counts()
                      .sort_values(ascending=False)
                      .reset_index()
                      .rename(columns={'loja': 'Loja', 'count': 'Qtd'}))
col1.bar_chart(top_10_pages_lojas, x='Loja', y='Qtd')
col2.write(top_10_pages_lojas)

# Qual o pre√ßo m√©dio por loja
st.subheader('Pre√ßo M√©dio por Loja')
col1, col2 = st.columns([6, 4])
df_non_zero_prices = df[df['new_price'] > 0]
average_price_by_lojas = (df_non_zero_prices.groupby('loja')['new_price']
                          .mean()
                          .sort_values(ascending=False)
                          .reset_index()
                          .rename(columns={'loja': 'Loja', 'new_price': 'Pre√ßo M√©dio'}))
col1.bar_chart(average_price_by_lojas, x='Loja', y='Pre√ßo M√©dio')
col2.write(average_price_by_lojas)

# Qual a satisfa√ß√£o por Loja
st.subheader('Satisfa√ß√£o por Loja')
col1, col2 = st.columns([6, 4])
df_non_zero_reviews = df[df['reviews_rating_number'] > 0]
satisfaction_by_brand = (df_non_zero_reviews.groupby('loja')['reviews_rating_number']
                         .mean()
                         .round(2)
                         .sort_values(ascending=False)
                         .reset_index()
                         .rename(columns={'loja': 'Loja', 'reviews_rating_number': 'Satisfa√ß√£o'}))
col1.bar_chart(satisfaction_by_brand, x='Loja', y='Satisfa√ß√£o')
col2.write(satisfaction_by_brand)
